using Nitra;
using Nitra.Runtime;
using Nitra.Declarations;
using MiniCAst;

map syntax MiniCSyntax.CompilationUnit -> CompilationUnit
{
  TopDeclarations -> TopDeclarations;
}

map syntax MiniCSyntax.TopDeclaration -> TopDeclaration
{
  | VarDeclaration -> VarDeclaration 
  | FunDeclaration -> FunDeclaration 
    {
      Name -> Name;
    }
}

map syntax MiniCSyntax.VarDeclaration -> VarDeclaration
{
  | Scalar -> ScalarDeclaration
    {
      Name -> Name;
      TypeReference -> TypeRef;
    }

  | Array -> ArrayDeclaration
    {
      Name -> Name;
      TypeReference -> TypeRef;
    }
}

map syntax MiniCSyntax.TypeReference -> TypeReference
{
  | Void  -> Void  { TypeRef = context.GetVoidSymbol(); }
  | Int   -> Int   { TypeRef = context.GetIntSymbol(); }
  | Float -> Float { TypeRef = context.GetFloatSymbol(); }
  | Bool  -> Bool  { TypeRef = context.GetBoolSymbol(); }
}

